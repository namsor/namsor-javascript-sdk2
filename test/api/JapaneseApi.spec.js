/**
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * OpenAPI spec version: 2.0.11
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NamSorApiV2);
  }
}(this, function(expect, NamSorApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NamSorApiV2.JapaneseApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('JapaneseApi', function() {
    describe('genderJapaneseNameFull', function() {
      it('should call genderJapaneseNameFull successfully', function(done) {
        //uncomment below and update the code to test genderJapaneseNameFull
        //instance.genderJapaneseNameFull(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('genderJapaneseNameFullBatch', function() {
      it('should call genderJapaneseNameFullBatch successfully', function(done) {
        //uncomment below and update the code to test genderJapaneseNameFullBatch
        //instance.genderJapaneseNameFullBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('genderJapaneseNamePinyin', function() {
      it('should call genderJapaneseNamePinyin successfully', function(done) {
        //uncomment below and update the code to test genderJapaneseNamePinyin
        //instance.genderJapaneseNamePinyin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('genderJapaneseNamePinyinBatch', function() {
      it('should call genderJapaneseNamePinyinBatch successfully', function(done) {
        //uncomment below and update the code to test genderJapaneseNamePinyinBatch
        //instance.genderJapaneseNamePinyinBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('japaneseNameKanjiCandidates', function() {
      it('should call japaneseNameKanjiCandidates successfully', function(done) {
        //uncomment below and update the code to test japaneseNameKanjiCandidates
        //instance.japaneseNameKanjiCandidates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('japaneseNameKanjiCandidatesBatch', function() {
      it('should call japaneseNameKanjiCandidatesBatch successfully', function(done) {
        //uncomment below and update the code to test japaneseNameKanjiCandidatesBatch
        //instance.japaneseNameKanjiCandidatesBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('japaneseNameLatinCandidates', function() {
      it('should call japaneseNameLatinCandidates successfully', function(done) {
        //uncomment below and update the code to test japaneseNameLatinCandidates
        //instance.japaneseNameLatinCandidates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('japaneseNameLatinCandidatesBatch', function() {
      it('should call japaneseNameLatinCandidatesBatch successfully', function(done) {
        //uncomment below and update the code to test japaneseNameLatinCandidatesBatch
        //instance.japaneseNameLatinCandidatesBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('japaneseNameMatch', function() {
      it('should call japaneseNameMatch successfully', function(done) {
        //uncomment below and update the code to test japaneseNameMatch
        //instance.japaneseNameMatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('japaneseNameMatchBatch', function() {
      it('should call japaneseNameMatchBatch successfully', function(done) {
        //uncomment below and update the code to test japaneseNameMatchBatch
        //instance.japaneseNameMatchBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('japaneseNameMatchFeedbackLoop', function() {
      it('should call japaneseNameMatchFeedbackLoop successfully', function(done) {
        //uncomment below and update the code to test japaneseNameMatchFeedbackLoop
        //instance.japaneseNameMatchFeedbackLoop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('parseJapaneseName', function() {
      it('should call parseJapaneseName successfully', function(done) {
        //uncomment below and update the code to test parseJapaneseName
        //instance.parseJapaneseName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('parseJapaneseNameBatch', function() {
      it('should call parseJapaneseNameBatch successfully', function(done) {
        //uncomment below and update the code to test parseJapaneseNameBatch
        //instance.parseJapaneseNameBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
